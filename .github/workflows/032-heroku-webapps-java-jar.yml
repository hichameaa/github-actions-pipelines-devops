name: 032-heroku-webapps-java-jar

env:
  HEROKU_APP_NAME: springbootapp-github-actions
  JAVA_VERSION: '23'
  DISTRIBUTION: zulu

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from GitHub
      - uses: actions/checkout@v4

      # Step 2: Set up Java
      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRIBUTION }}
          cache: 'maven'

      # Step 3: Build the project with Maven
      - name: Build with Maven
        run: mvn clean package -f ./springbootapp/pom.xml -DskipTests

        # Step 3.5: List files in target directory for debugging
      - name: List files in target directory
        run: ls -l ${GITHUB_WORKSPACE}/springbootapp/target

      # Step 4: Upload the artifact for the deployment job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: '${{ github.workspace }}/springbootapp/target/*.jar'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: none

    steps:
      # Step 1: Download artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app

  # Step 1.5: Debug artifact download
      - name: List files in download directory
        run: ls -l ${GITHUB_WORKSPACE}

      # Step 2: Deploy to Heroku
      - name: Deploy to Heroku
        run: mvn heroku:deploy -Dheroku.appName=${{ env.HEROKU_APP_NAME }} -Dheroku.jarPath=${GITHUB_WORKSPACE}/springbootapp/target/*.jar        
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
